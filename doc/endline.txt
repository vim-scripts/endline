*Endline*  Endline: Easily add filetype-specific line-endings.
           For Vim version 7.x

                               By Thomas Allen
                             thomas@oinksoft.com

This plugin maps (by default) <S-CR> to add a filetype's provided "line ending"
to the end of the current line if it is not already present. For instance, a ';'
would be added to the end of a line of JavaScript source.

This is similar to a feature provided by TextMate, mapped to
Command-Option-Return in that application.

                                                                 *Endline-usage*

Usage:

Somewhere in your .vimrc (or equivalent), provide a global dict mapping filetype
names to line endings, like so:

let g:Endlines = {
  \'erlang': '.',
  \'java': ';',
  \'javascript': ';',
  \'ocaml': ';;',
  \'perl': ';',
  \'php': ';',
  \'python': ':',
  \'sml': ';'
\}

Mappings can also be a list of patterns that will be tried in order. In the
following example, a " ->" is appended if the line ends with a ), and a "," is
appended if the line ends with non-whitespace.

let g:Endlines = {
      \'erlang':     [
        \[')$', ' ->'],
        \['\S$', ',']]
      \}

By default, <S-CR> is mapped in both insert and normal mode. In insert mode, a
new line is added as well.

                                                               *Endline-options*
Global Options:

g:EndlineMapping ('<S-CR>'): The default endline mapping.
g:EndlineInsertMapping (g:EndlineMapping): The insert mode mapping.
g:EndlineNormalMapping (g:EndlineMapping): The normal mode mapping.
g:EndlineInsert (1): 0 to disable the insert mode mapping.
g:EndlineNormal (1): 0 to disable the normal mode mapping.
g:Endlines ({}): See "Usage"
